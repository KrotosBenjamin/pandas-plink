name: Test, build, and deploy to PyPI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest black isort

      - name: Lint
        run: |
          flake8 .
          black --check .
          isort --check-only .

      - name: Test
        run: pytest .

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build wheels
        uses: pypa/cibuildwheel@v1.11.1.post1
        env:
          CIBW_SKIP: "pp27* pp34* pp35* pp36* cp27-* cp34-* cp35-* cp36-*"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
      name: Build source distribution
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2

        - uses: actions/setup-python@v2
          name: Install Python
          with:
            python-version: '3.8'

        - name: Build sdist
          run: python setup.py sdist

        - uses: actions/upload-artifact@v2
          with:
            path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
